# Use an official Ubuntu as a parent image
FROM ubuntu:latest

# Set the environment variables
ENV DEBIAN_FRONTEND=noninteractive

# Update the package lists and install necessary packages
RUN apt-get update && \
    apt-get install -y \
    wget \
    unzip \
    && rm -rf /var/lib/apt/lists/*

# Set up ChromeDriver
ARG CHROMEDRIVER_VERSION=94.0.4606.41
RUN wget -q --continue -P /tmp/ "https://chromedriver.storage.googleapis.com/${CHROMEDRIVER_VERSION}/chromedriver_linux64.zip" \
    && unzip -q /tmp/chromedriver_linux64.zip -d /usr/local/bin/ \
    && rm /tmp/chromedriver_linux64.zip \
    && chmod +x /usr/local/bin/chromedriver

# Verify the installation
RUN chromedriver --version

# Other commands and configurations for your Dockerfile
# ...

# Set the working directory
WORKDIR /app

# Copy your application files into the container
COPY . .

# Command to run your application
CMD ["npm", "start"]
#######################################

RROR @wdio/runner: Error: Invalid or unsupported WebDriver capabilities found ("binary"). Ensure to only use valid W3C WebDriver capabilities (see https://w3c.github.io/webdriver/#capabilities).If you run your tests on a remote vendor, like Sauce Labs or BrowserStack, make sure that you put them into vendor specific capabilities, e.g. "sauce:options" or "bstack:options". Please reach out to your vendor support team if you have further questions.
[0-1]     at startWebDriverSession (file:///tmp/webdriverio-test/node_modules/webdriver/build/utils.js:36:19)

######################################

https://onesecurity.verizon.com/onesecurity/rest/v1/cicd/uuid

sed -i "s|^project\.passthrough=.*$|project\.passthrough=$UUID|g" job.propertie

https://onesecurity.verizon.com/onesecurity/rest/v1/cicd/gating/*/passthrough/<project.passthrough>

{
    "status": "processing",
    "details": "Scanning has not completed yet."
}

{
    "status": "success",
    "details": "Successfully processed scan.",
    "duration": 3.0460000038146973,
    "critical": 25,
    "high": 66,
    "medium": 82,
    "low": 19,
    "maxExploitabilityScore": 4
}
#########################################################


#!/bin/bash

# Generate UUID
UUID=$(curl -s https://onesecurity.verizon.com/onesecurity/rest/v1/cicd/uuid)

# Update job.properties file with UUID
sed -i "s|^project\.passthrough=.*$|project\.passthrough=$UUID|g" job.properties

# Function to check status
check_status() {
    local status=$(curl -s "https://onesecurity.verizon.com/onesecurity/rest/v1/cicd/gating/*/passthrough/$UUID" | jq -r '.status')
    echo "$status"
}

# Check status
check_status
