pipeline {
    agent any

    environment {
        JF_GIT_PROVIDER = 'github'
        JF_WORKING_DIR = '.'
    }

    stages {
        stage('Clone Repository') {
            steps {
                git credentialsId: 'YOUR_GIT_CREDENTIALS_ID', url: 'https://your.repo.url.git', branch: 'main'
            }
        }

        stage('Download Frogbot and Scan') {
            steps {
                withCredentials([
                    string(credentialsId: 'JF_URL', variable: 'JF_URL'),
                    string(credentialsId: 'JF_ACCESS_TOKEN', variable: 'JF_ACCESS_TOKEN'),
                    string(credentialsId: 'JF_GIT_TOKEN', variable: 'JF_GIT_TOKEN')
                ]) {
                    sh '''
                    curl -fLg "https://releases.jfrog.io/artifactory/frogbot/v2/latest/getFrogbot.sh" | sh
                    chmod +x frogbot
                    ./frogbot scan-pull-request
                    '''
                }
            }
        }
    }
}

version: 1
repos:
  - repoName: my-org/my-repo
    branches:
      - name: main
        workingDirs:
          - .
cd /opt
sudo wget https://dlcdn.apache.org/maven/maven-3/3.9.6/binaries/apache-maven-3.9.6-bin.tar.gz
sudo tar -xzf apache-maven-3.9.6-bin.tar.gz
sudo ln -sfn apache-maven-3.9.6 apache-maven

# Update environment
export MAVEN_HOME=/opt/apache-maven
export PATH=$MAVEN_HOME/bin:$PATH

pipeline {
  agent any

  stages {
    stage('scan') {
      steps {
        script {
          withCredentials([usernamePassword(credentialsId: 'scan-creds', usernameVariable: 'USER', passwordVariable: 'PASSWORD')]) {
            sh """
              echo "Running scan with user \$USER"
              export user=\$USER
              export password=\$PASSWORD
              # your scan command here
            """
          }
        }
      }
    }
  }
}


pipeline {
    agent any
    stages {
        stage('Print MR Branch') {
            steps {
                script {
                    echo "Source Branch: ${env.gitlabSourceBranch}"
                    echo "Target Branch: ${env.gitlabTargetBranch}"
                    echo "Merge Action: ${env.gitlabActionType}"
                }
            }
        }
    }
}


